generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid())
  email      String     @unique
  password   String
  username   String     @unique
  comments   Comment[]
  posts      Post[]
  tags       Tag[]
  categories Category[]
}

model Post {
  id         String    @id @default(uuid())
  title      String
  content    String    @db.Text
  published  Boolean   @default(false)
  authorId   String
  createTime DateTime  @updatedAt
  updateTime DateTime  @default(now())
  comments   Comment[]
  author     User      @relation(fields: [authorId], references: [id])
  postTags   PostTag[]
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String? // 允许为空，文章可以不分类
}

model Comment {
  id         String   @id @default(uuid())
  content    String
  postId     String
  authorId   String
  createTime DateTime @default(now())
  author     User     @relation(fields: [authorId], references: [id])
  post       Post     @relation(fields: [postId], references: [id])
}

model Tag {
  id       String    @id @default(uuid())
  value    String
  label    String
  authorId String
  postTags PostTag[]
  author   User      @relation(fields: [authorId], references: [id])

  @@unique([value, authorId], name: "value_authorId")
}

model PostTag {
  postId String
  tagId  String
  post   Post   @relation(fields: [postId], references: [id])
  tag    Tag    @relation(fields: [tagId], references: [id])

  @@id([postId, tagId])
}

model Category {
  id        String   @id @default(uuid())
  name      String // 去除非唯一约束
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String // 关联用户
  posts     Post[] // 目录下多篇文章
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关键：同一用户下目录名称唯一
  @@unique([name, authorId], name: "category_name_author")
}
